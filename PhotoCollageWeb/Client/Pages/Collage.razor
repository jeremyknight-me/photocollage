@page "/collage"
@using Microsoft.AspNetCore.SignalR.Client
@using PhotoCollageWeb.Shared
@using System.Collections.Concurrent
@layout EmptyLayout
@inject NavigationManager NavigationManager
@implements IDisposable

<div id="collage-wrapper">
    @foreach (var photo in this.photos.Values)
    {
        <img src="@($"data:image/{photo.Extension};base64,{photo.Data}")" />
    }
</div>


@code {
    private HubConnection hubConnection;
    private Guid id;
    private ConcurrentDictionary<Guid, PhotoData> photos = new();

    protected override async Task OnInitializedAsync()
    {
        this.hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/hubs/collage"))
            .ConfigureLogging(logging =>
            {
                logging.SetMinimumLevel(LogLevel.Trace);
            })
            .Build();

        this.hubConnection.On<PhotoData>("ReceivePhoto", photo =>
        {
            if (!this.photos.ContainsKey(photo.Id))
            {
                this.photos.TryAdd(photo.Id, photo);
            }

            var hiddenPhotos = this.photos.Values.Where(x => x.IsRemoved);
            foreach (var hiddenPhoto in hiddenPhotos)
            {
                if (this.photos.ContainsKey(hiddenPhoto.Id))
                {
                    this.photos.TryRemove(hiddenPhoto.Id, out var removedPhoto);
                }
            }

            this.StateHasChanged();
        });

        this.hubConnection.On<Guid>("ReceiveRemove", id =>
        {
            // todo: start fade out transition
            this.StateHasChanged();
        });

        await this.hubConnection.StartAsync();
    }

    public void Dispose()
    {
        _ = this.hubConnection.DisposeAsync();
    }
}
